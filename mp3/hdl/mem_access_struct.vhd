-- VHDL Entity ece411.MEM_ACCESS.interface
--
-- Created:
--          by - mccart18.ews (gelib-057-17.ews.illinois.edu)
--          at - 21:45:49 03/28/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY MEM_ACCESS IS
   PORT( 
      CLK                  : IN     std_logic;
      DR_MEM_IN            : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      D_MDATAIN            : IN     LC3B_WORD;
      D_MRESP_H            : IN     STD_LOGIC;
      EXEC_ADDR_MEM        : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      MEM_ALU_IN           : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      MEM_CC_IN            : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      MEM_CONTROL_WORD_IN  : IN     STD_LOGIC_VECTOR (31 DOWNTO 0);
      MEM_PC_OUT           : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      RESET_L              : IN     STD_LOGIC;
      STALL_L              : IN     std_logic;
      BRsel                : OUT    STD_LOGIC;
      DR_MEM_OUT           : OUT    std_logic_vector (2 DOWNTO 0);
      D_MADDR              : OUT    LC3B_WORD;
      D_MDATAOUT           : OUT    lc3b_word;
      D_MREAD_L            : OUT    std_logic;
      D_MWRITEH_L          : OUT    std_logic;
      D_MWRITEL_L          : OUT    std_logic;
      MDROUT               : OUT    LC3B_WORD;
      MEM_ALU_OUT          : OUT    lc3b_word;
      MEM_CONTROL_WORD_OUT : OUT    lc3b_dword;
      M_PC_OUT             : OUT    LC3B_WORD
   );

-- Declarations

END MEM_ACCESS ;

--
-- VHDL Architecture ece411.MEM_ACCESS.struct
--
-- Created:
--          by - mccart18.ews (gelib-057-17.ews.illinois.edu)
--          at - 21:45:50 03/28/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF MEM_ACCESS IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL BRen         : STD_LOGIC;
   SIGNAL MDRMUXSel    : STD_LOGIC;
   SIGNAL MEM_READ_L   : STD_LOGIC;
   SIGNAL MEM_WRITEH_L : std_logic;
   SIGNAL MEM_WRITEL_L : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL MDROUT_internal : LC3B_WORD;


   -- Component Declarations
   COMPONENT BUF16
   PORT (
      WORDin  : IN     lc3b_word;
      WORDout : OUT    lc3b_word
   );
   END COMPONENT;
   COMPONENT BUF3
   PORT (
      WORDin  : IN     std_logic_vector (2 DOWNTO 0);
      WORDout : OUT    std_logic_vector (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT CONTROL_RIPPER
   PORT (
      CONTROL_WORD   : IN     LC3B_DWORD ;
      ALUOP          : OUT    LC3B_ALUOP ;
      BRen           : OUT    STD_LOGIC ;
      WDATAMUXSel    : OUT    STD_LOGIC ;
      MDRMUXSel      : OUT    STD_LOGIC ;
      SR2MUXSel      : OUT    STD_LOGIC ;
      SR1MUXSel      : OUT    STD_LOGIC ;
      ADDR1MUXSel    : OUT    LC3B_4MUX_SEL ;
      ADDR2MUXSel    : OUT    LC3B_4MUX_SEL ;
      LD_REG         : OUT    STD_LOGIC ;
      LDcc           : OUT    STD_LOGIC ;
      SR2_OUT_MUXSel : OUT    STD_LOGIC ;
      MEM_READ_L     : OUT    STD_LOGIC ;
      MEM_WRITEH_L   : OUT    STD_LOGIC ;
      MEM_WRITEL_L   : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT DMREAD_Calc
   PORT (
      CLK        : IN     STD_LOGIC ;
      MEM_READ_L : IN     STD_LOGIC ;
      MRESP_H    : IN     std_logic ;
      RESET_L    : IN     STD_LOGIC ;
      STALL_L    : IN     STD_LOGIC ;
      MREAD_L    : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT DMWrite_Calc
   PORT (
      CLK         : IN     STD_LOGIC ;
      MEM_WRITE_L : IN     STD_LOGIC ;
      MRESP_H     : IN     std_logic ;
      RESET_L     : IN     STD_LOGIC ;
      STALL_L     : IN     STD_LOGIC ;
      WRITE_L     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT MUX2_16
   PORT (
      A   : IN     LC3B_WORD;
      B   : IN     LC3B_WORD;
      SEL : IN     STD_LOGIC;
      F   : OUT    LC3B_WORD
   );
   END COMPONENT;
   COMPONENT NZP_Calc
   PORT (
      BR    : IN     STD_LOGIC ;
      CCin  : IN     lc3b_cc ;
      NZPin : IN     std_logic_vector (2 DOWNTO 0);
      BRSel : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : BUF16 USE ENTITY ece411.BUF16;
   FOR ALL : BUF3 USE ENTITY ece411.BUF3;
   FOR ALL : CONTROL_RIPPER USE ENTITY ece411.CONTROL_RIPPER;
   FOR ALL : DMREAD_Calc USE ENTITY ece411.DMREAD_Calc;
   FOR ALL : DMWrite_Calc USE ENTITY ece411.DMWrite_Calc;
   FOR ALL : MUX2_16 USE ENTITY ece411.MUX2_16;
   FOR ALL : NZP_Calc USE ENTITY ece411.NZP_Calc;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   MEM_CONTROL_WORD_OUT <= MEM_CONTROL_WORD_IN;                             


   -- Instance port mappings.
   U_3 : BUF16
      PORT MAP (
         WORDin  => MDROUT_internal,
         WORDout => D_MDATAOUT
      );
   U_7 : BUF16
      PORT MAP (
         WORDin  => MEM_ALU_IN,
         WORDout => MEM_ALU_OUT
      );
   U_8 : BUF16
      PORT MAP (
         WORDin  => MEM_PC_OUT,
         WORDout => M_PC_OUT
      );
   U_10 : BUF16
      PORT MAP (
         WORDin  => EXEC_ADDR_MEM,
         WORDout => D_MADDR
      );
   U_4 : BUF3
      PORT MAP (
         WORDin  => DR_MEM_IN,
         WORDout => DR_MEM_OUT
      );
   U_5 : CONTROL_RIPPER
      PORT MAP (
         CONTROL_WORD   => MEM_CONTROL_WORD_IN,
         ALUOP          => OPEN,
         BRen           => BRen,
         WDATAMUXSel    => OPEN,
         MDRMUXSel      => MDRMUXSel,
         SR2MUXSel      => OPEN,
         SR1MUXSel      => OPEN,
         ADDR1MUXSel    => OPEN,
         ADDR2MUXSel    => OPEN,
         LD_REG         => OPEN,
         LDcc           => OPEN,
         SR2_OUT_MUXSel => OPEN,
         MEM_READ_L     => MEM_READ_L,
         MEM_WRITEH_L   => MEM_WRITEH_L,
         MEM_WRITEL_L   => MEM_WRITEL_L
      );
   U_0 : DMREAD_Calc
      PORT MAP (
         CLK        => CLK,
         MEM_READ_L => MEM_READ_L,
         MRESP_H    => D_MRESP_H,
         RESET_L    => RESET_L,
         STALL_L    => STALL_L,
         MREAD_L    => D_MREAD_L
      );
   U_1 : DMWrite_Calc
      PORT MAP (
         CLK         => CLK,
         MEM_WRITE_L => MEM_WRITEH_L,
         MRESP_H     => D_MRESP_H,
         RESET_L     => RESET_L,
         STALL_L     => STALL_L,
         WRITE_L     => D_MWRITEH_L
      );
   U_2 : DMWrite_Calc
      PORT MAP (
         CLK         => CLK,
         MEM_WRITE_L => MEM_WRITEL_L,
         MRESP_H     => D_MRESP_H,
         RESET_L     => RESET_L,
         STALL_L     => STALL_L,
         WRITE_L     => D_MWRITEL_L
      );
   MDRMUX : MUX2_16
      PORT MAP (
         A   => D_MDATAIN,
         B   => MEM_ALU_IN,
         SEL => MDRMUXSel,
         F   => MDROUT_internal
      );
   NZP : NZP_Calc
      PORT MAP (
         BR    => BRen,
         CCin  => MEM_CC_IN,
         NZPin => DR_MEM_IN,
         BRSel => BRsel
      );

   -- Implicit buffered output assignments
   MDROUT <= MDROUT_internal;

END struct;
