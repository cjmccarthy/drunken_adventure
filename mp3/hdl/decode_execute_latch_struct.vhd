-- VHDL Entity ece411.DECODE_EXECUTE_LATCH.interface
--
-- Created:
--          by - hyunyi1.ews (evrt-252-05.ews.illinois.edu)
--          at - 21:55:55 03/14/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY DECODE_EXECUTE_LATCH IS
   PORT( 
      CLK                     : IN     std_logic;
      CONTROL_WORD            : IN     LC3B_DWORD;
      DECODE_PC_PLUS2_OUT     : IN     LC3B_WORD;
      DEC_PC_OUT              : IN     LC3B_WORD;
      DR_OUT                  : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      RESET_L                 : IN     STD_LOGIC;
      SR1_F                   : IN     LC3B_WORD;
      SR2_F                   : IN     LC3B_WORD;
      STALL_L                 : IN     std_logic;
      offset11_F              : IN     LC3B_WORD;
      offset5_F               : IN     LC3B_WORD;
      offset6_F               : IN     LC3B_WORD;
      offset9_F               : IN     LC3B_WORD;
      DR_EXECUTE_IN           : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0);
      EXECUTE_CONTROL_WORD_IN : OUT    STD_LOGIC_VECTOR (31 DOWNTO 0);
      EXECUTE_PC_OUT          : OUT    LC3B_WORD;
      EXECUTE_PC_PLUS2_IN     : OUT    LC3B_WORD;
      SR1                     : OUT    LC3B_WORD;
      SR2                     : OUT    LC3B_WORD;
      offset11                : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0);
      offset5                 : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0);
      offset6                 : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0);
      offset9                 : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0)
   );

-- Declarations

END DECODE_EXECUTE_LATCH ;

--
-- VHDL Architecture ece411.DECODE_EXECUTE_LATCH.struct
--
-- Created:
--          by - hyunyi1.ews (evrt-252-05.ews.illinois.edu)
--          at - 21:55:55 03/14/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF DECODE_EXECUTE_LATCH IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT CWORD_REG32
   PORT (
      A       : IN     STD_LOGIC_VECTOR (31 DOWNTO 0);
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC_VECTOR (31 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT REG16
   PORT (
      A       : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT REG3
   PORT (
      A       : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : CWORD_REG32 USE ENTITY ece411.CWORD_REG32;
   FOR ALL : REG16 USE ENTITY ece411.REG16;
   FOR ALL : REG3 USE ENTITY ece411.REG3;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : CWORD_REG32
      PORT MAP (
         RESET_L => RESET_L,
         A       => CONTROL_WORD,
         EN      => STALL_L,
         CLK     => CLK,
         F       => EXECUTE_CONTROL_WORD_IN
      );
   U_1 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => offset11_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => offset11
      );
   U_2 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => offset9_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => offset9
      );
   U_3 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => offset6_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => offset6
      );
   U_4 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => offset5_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => offset5
      );
   U_8 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => DECODE_PC_PLUS2_OUT,
         EN      => STALL_L,
         CLK     => CLK,
         F       => EXECUTE_PC_PLUS2_IN
      );
   U_9 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => SR2_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => SR2
      );
   U_10 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => SR1_F,
         EN      => STALL_L,
         CLK     => CLK,
         F       => SR1
      );
   U_11 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => DEC_PC_OUT,
         EN      => STALL_L,
         CLK     => CLK,
         F       => EXECUTE_PC_OUT
      );
   U_5 : REG3
      PORT MAP (
         RESET_L => RESET_L,
         A       => DR_OUT,
         EN      => STALL_L,
         CLK     => CLK,
         F       => DR_EXECUTE_IN
      );

END struct;
