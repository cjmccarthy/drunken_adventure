-- VHDL Entity ece411.Cache_Datapath.interface
--
-- Created:
--          by - mccart18.ews (linux7.ews.illinois.edu)
--          at - 02:23:43 03/06/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Cache_Datapath IS
   PORT( 
      ADDRESS     : IN     LC3b_word;
      DATAOUT     : IN     LC3b_word;
      MREAD_L     : IN     std_logic;
      MWRITEH_L   : IN     std_logic;
      MWRITEL_L   : IN     std_logic;
      PMDATAIN    : IN     LC3B_OWORD;
      RESET_L     : IN     std_logic;
      clk         : IN     std_logic;
      in_idle_hit : IN     STD_LOGIC;
      in_load     : IN     STD_LOGIC;
      in_wbc      : IN     STD_LOGIC;
      DATAIN      : OUT    LC3b_word;
      MISS        : OUT    std_logic;
      MRESP_H     : OUT    std_logic;
      PMADDRESS   : OUT    LC3B_WORD;
      PMDATAOUT   : OUT    LC3B_OWORD
   );

-- Declarations

END Cache_Datapath ;

--
-- VHDL Architecture ece411.Cache_Datapath.struct
--
-- Created:
--          by - mccart18.ews (linux7.ews.illinois.edu)
--          at - 02:23:43 03/06/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Cache_Datapath IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL C_ACCESS      : std_logic;
   SIGNAL EvictTag      : LC3B_C_TAG;
   SIGNAL INDEX         : LC3B_C_INDEX;
   SIGNAL LRUout        : std_logic;
   SIGNAL LRUout_NOT    : STD_LOGIC;
   SIGNAL OFFSET        : LC3B_C_OFFSET;
   SIGNAL Prehit0       : std_logic;
   SIGNAL Prehit1       : std_logic;
   SIGNAL Protohit      : std_logic;
   SIGNAL Protohit_NOT  : std_logic;
   SIGNAL TAG           : LC3B_C_TAG;
   SIGNAL TagOut0       : LC3B_C_TAG;
   SIGNAL TagOut1       : LC3B_C_TAG;
   SIGNAL WBADDR        : LC3b_word;
   SIGNAL Way0Write     : std_logic;
   SIGNAL Way1Write     : std_logic;
   SIGNAL WayData0      : LC3B_OWORD;
   SIGNAL WayData1      : LC3B_OWORD;
   SIGNAL WayData_Word0 : LC3B_WORD;
   SIGNAL WayData_Word1 : LC3B_WORD;
   SIGNAL clk_NOT       : std_logic;
   SIGNAL clk_delayed   : std_logic;
   SIGNAL hit_gate      : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL MRESP_H_internal : std_logic;


   -- Component Declarations
   COMPONENT ADDRcomb
   PORT (
      INDEX    : IN     LC3B_C_INDEX ;
      EvictTag : IN     LC3B_C_TAG ;
      WBADDR   : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT ADDRripper
   PORT (
      ADDRESS : IN     LC3b_word ;
      TAG     : OUT    LC3B_C_TAG ;
      INDEX   : OUT    LC3B_C_INDEX ;
      OFFSET  : OUT    LC3B_C_OFFSET 
   );
   END COMPONENT;
   COMPONENT AND_GATE
   PORT (
      A : IN     std_logic ;
      B : IN     std_logic ;
      F : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT AND_GATE4
   PORT (
      A : IN     std_logic;
      B : IN     std_logic;
      C : IN     std_logic;
      D : IN     std_logic;
      F : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT CLKdelay
   PORT (
      clk         : IN     std_logic;
      clk_delayed : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT Cache_ValidArray
   PORT (
      Reset_L    : IN     std_logic ;
      ValidWrite : IN     std_logic ;
      Index      : IN     LC3B_C_INDEX ;
      ValidIn    : IN     std_logic ;
      ValidOut   : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Cache_Way
   PORT (
      DATAOUT      : IN     LC3b_word ;
      DataWrite    : IN     std_logic ;
      INDEX        : IN     LC3B_C_INDEX ;
      MREAD_L      : IN     std_logic ;
      MWRITEH_L    : IN     std_logic ;
      MWRITEL_L    : IN     std_logic ;
      OFFSET       : IN     LC3B_C_OFFSET ;
      PMDATAIN     : IN     LC3B_OWORD ;
      RESET_L      : IN     std_logic ;
      TAG          : IN     LC3B_C_TAG ;
      TagWrite     : IN     std_logic ;
      ValidWrite   : IN     std_logic ;
      clk          : IN     std_logic ;
      Prehit       : OUT    std_logic ;
      TagOut       : OUT    LC3B_C_TAG ;
      WayData      : OUT    LC3B_OWORD ;
      WayData_Word : OUT    LC3B_WORD 
   );
   END COMPONENT;
   COMPONENT Inverter
   PORT (
      A : IN     STD_LOGIC;
      F : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT NAND_GATE_3
   PORT (
      A : IN     std_logic;
      B : IN     std_logic;
      C : IN     std_logic;
      F : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT OR_GATE
   PORT (
      A : IN     std_logic;
      B : IN     std_logic;
      F : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT OWordMux2
   PORT (
      A   : IN     LC3B_OWORD;
      B   : IN     LC3B_OWORD;
      Sel : IN     std_logic;
      F   : OUT    LC3B_OWORD
   );
   END COMPONENT;
   COMPONENT TagMux
   PORT (
      A   : IN     LC3B_C_TAG ;
      B   : IN     LC3B_C_TAG ;
      Sel : IN     std_logic ;
      F   : OUT    LC3B_C_TAG 
   );
   END COMPONENT;
   COMPONENT WordMux2
   PORT (
      A   : IN     LC3b_word ;
      B   : IN     LC3b_word ;
      Sel : IN     std_logic ;
      F   : OUT    LC3b_word 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ADDRcomb USE ENTITY ece411.ADDRcomb;
   FOR ALL : ADDRripper USE ENTITY ece411.ADDRripper;
   FOR ALL : AND_GATE USE ENTITY ece411.AND_GATE;
   FOR ALL : AND_GATE4 USE ENTITY ece411.AND_GATE4;
   FOR ALL : CLKdelay USE ENTITY ece411.CLKdelay;
   FOR ALL : Cache_ValidArray USE ENTITY ece411.Cache_ValidArray;
   FOR ALL : Cache_Way USE ENTITY ece411.Cache_Way;
   FOR ALL : Inverter USE ENTITY ece411.Inverter;
   FOR ALL : NAND_GATE_3 USE ENTITY ece411.NAND_GATE_3;
   FOR ALL : OR_GATE USE ENTITY ece411.OR_GATE;
   FOR ALL : OWordMux2 USE ENTITY ece411.OWordMux2;
   FOR ALL : TagMux USE ENTITY ece411.TagMux;
   FOR ALL : WordMux2 USE ENTITY ece411.WordMux2;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   anADDRcomb : ADDRcomb
      PORT MAP (
         INDEX    => INDEX,
         EvictTag => EvictTag,
         WBADDR   => WBADDR
      );
   anAddrRipper : ADDRripper
      PORT MAP (
         ADDRESS => ADDRESS,
         TAG     => TAG,
         INDEX   => INDEX,
         OFFSET  => OFFSET
      );
   AND_MISS : AND_GATE
      PORT MAP (
         A => Protohit_NOT,
         B => C_ACCESS,
         F => MISS
      );
   U_1 : AND_GATE
      PORT MAP (
         A => LRUout_NOT,
         B => in_load,
         F => Way0Write
      );
   U_2 : AND_GATE
      PORT MAP (
         A => LRUout,
         B => in_load,
         F => Way1Write
      );
   U_4 : AND_GATE
      PORT MAP (
         A => clk_delayed,
         B => clk_NOT,
         F => hit_gate
      );
   U_0 : AND_GATE4
      PORT MAP (
         A => Protohit,
         B => C_ACCESS,
         C => in_idle_hit,
         D => hit_gate,
         F => MRESP_H_internal
      );
   aCLKdelay : CLKdelay
      PORT MAP (
         clk         => clk,
         clk_delayed => clk_delayed
      );
   LRU : Cache_ValidArray
      PORT MAP (
         Reset_L    => RESET_L,
         ValidWrite => MRESP_H_internal,
         Index      => INDEX,
         ValidIn    => Prehit0,
         ValidOut   => LRUout
      );
   Way0 : Cache_Way
      PORT MAP (
         DATAOUT      => DATAOUT,
         DataWrite    => Way0Write,
         INDEX        => INDEX,
         MREAD_L      => MREAD_L,
         MWRITEH_L    => MWRITEH_L,
         MWRITEL_L    => MWRITEL_L,
         OFFSET       => OFFSET,
         PMDATAIN     => PMDATAIN,
         RESET_L      => RESET_L,
         TAG          => TAG,
         TagWrite     => Way0Write,
         ValidWrite   => Way0Write,
         clk          => clk,
         Prehit       => Prehit0,
         TagOut       => TagOut0,
         WayData      => WayData0,
         WayData_Word => WayData_Word0
      );
   Way1 : Cache_Way
      PORT MAP (
         DATAOUT      => DATAOUT,
         DataWrite    => Way1Write,
         INDEX        => INDEX,
         MREAD_L      => MREAD_L,
         MWRITEH_L    => MWRITEH_L,
         MWRITEL_L    => MWRITEL_L,
         OFFSET       => OFFSET,
         PMDATAIN     => PMDATAIN,
         RESET_L      => RESET_L,
         TAG          => TAG,
         TagWrite     => Way1Write,
         ValidWrite   => Way1Write,
         clk          => clk,
         Prehit       => Prehit1,
         TagOut       => TagOut1,
         WayData      => WayData1,
         WayData_Word => WayData_Word1
      );
   NOT_ACCESS : Inverter
      PORT MAP (
         A => Protohit,
         F => Protohit_NOT
      );
   NOT_LRUout : Inverter
      PORT MAP (
         A => LRUout,
         F => LRUout_NOT
      );
   NOT_clk : Inverter
      PORT MAP (
         A => clk,
         F => clk_NOT
      );
   ACCESS_NAND : NAND_GATE_3
      PORT MAP (
         A => MREAD_L,
         B => MWRITEH_L,
         C => MWRITEL_L,
         F => C_ACCESS
      );
   OR_PREHIT : OR_GATE
      PORT MAP (
         A => Prehit1,
         B => Prehit0,
         F => Protohit
      );
   WayDataMux : OWordMux2
      PORT MAP (
         A   => WayData0,
         B   => WayData1,
         Sel => LRUout,
         F   => PMDATAOUT
      );
   aTagMux : TagMux
      PORT MAP (
         A   => TagOut1,
         B   => TagOut0,
         Sel => LRUout,
         F   => EvictTag
      );
   WBADDRMux : WordMux2
      PORT MAP (
         A   => ADDRESS,
         B   => WBADDR,
         Sel => in_wbc,
         F   => PMADDRESS
      );
   WayDataWordMux : WordMux2
      PORT MAP (
         A   => WayData_Word0,
         B   => WayData_Word1,
         Sel => Prehit1,
         F   => DATAIN
      );

   -- Implicit buffered output assignments
   MRESP_H <= MRESP_H_internal;

END struct;
